import {Component, OnDestroy, OnInit} from '@angular/core';
import {ActivatedRoute, Router} from "@angular/router";
import {TransactionService} from "../../services/transaction.service";
import {SubscriptionsManager} from "../../../../core/helpers/SubscriptionsManager";
import html2canvas from "html2canvas";
import jsPDF from "jspdf";

@Component({
  selector: 'app-zimra-payment-pop',
  templateUrl: './zimra-payment-pop.component.html',
  styleUrls: ['./zimra-payment-pop.component.scss']
})
export class ZimraPaymentPopComponent implements OnInit, OnDestroy{

  constructor(
    private router:Router,
    private route: ActivatedRoute,
    private transactionService: TransactionService,
  ) {
  }

  onBack(): void {
    setTimeout(() => {
      this.router.navigateByUrl('screens/main/zimra-screen');
    }, 100);
  }

  transactionStatus: any = {
    "COMPLETED" : "green",
    "FAILED" : "red",
    "CANCELLED" : "volcano",
    "PROCESSING" : "orange",
    "PENDING_AWAITING_AUTHORISATION" : "orange",
    "PENDING_WAITING_PROCESSING" : "blue",
    "DECLINED" : "red",
  };

  replaceUnderscoreWithSpace(value: string): string {
    return value.replace(/_/g, ' ');
  }

  generateCurrentDate() {
    return new Date();
  }

  generatePDF() {
    this.popLoading = true
    var data = document.getElementById('contentToConvert')!;
    html2canvas(data).then(canvas => {
      var popName = 'POP - ' + this.transaction.reference + '-' + this.generateCurrentDate();
      var contentWidth = canvas.width;
      var contentHeight = canvas.height;
      //One page pdf shows the height of canvas generated by html page;
      var pageHeight = contentWidth / 592.28 * 841.89;
      //html page height without pdf generation
      var leftHeight = contentHeight;
      //Page offset
      var position = 0;
      //a4 paper size [595.28841.89], width and height of image in pdf of canvas generated by html page
      var imgWidth = 595.28;
      var imgHeight = 592.28/contentWidth * contentHeight;

      //Return picture dataURL, parameters: picture format and sharpness (0-1)
      var pageData = canvas.toDataURL('image/jpeg', 1.0);

      let pdf = new jsPDF('p', 'pt', 'a4');

      //There are two heights to distinguish, one is the actual height of the html page, and the height of the generated pdf page (841.89)
      //When the content does not exceed the display range of one page of pdf, paging is not required
      if (leftHeight < pageHeight) {
        pdf.addImage(pageData, 'JPEG', 0, 30, imgWidth, imgHeight );
      } else {
        while(leftHeight > 0) {
          pdf.addImage(pageData, 'JPEG', 0, position, imgWidth, imgHeight)
          leftHeight -= pageHeight;
          position -= 841.89;
          //Avoid adding blank pages
          if(leftHeight > 0) {
            pdf.addPage();
          }
        }
      }
      pdf.save(popName + '.pdf');
    });
    this.popLoading = false
  }

  id?: any;
  transaction?: any;
  transactionLoading?: any;
  popLoading?: any;

  subs = new SubscriptionsManager();

  ngOnInit(): void {
    this.route.params.subscribe(params => {
      this.id = params['id'];
      this.transactionLoading = true;
      this.transactionService.getTransaction(this.id);
    });
    this.subs.add = this.transactionService.$transaction.subscribe((response: any) => {
      console.log(response)
      this.transaction = response.data;
      this.transactionLoading = false;
    })
  }

  zigConverter(currency: any) {
    if (currency == 'ZWL'){
      return 'ZiG'
    } else {
      return currency
    }
  }

  ngOnDestroy(){
    this.subs.dispose();
  }

}
